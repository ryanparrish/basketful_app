# Generated by Django 5.2 on 2025-10-11 20:09

import datetime
import django.core.validators
import django.db.models.deletion
import django.db.models.functions.datetime
import django.utils.timezone
import django_ulid.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    replaces = [('food_orders', '0001_initial'), ('food_orders', '0002_order_status_program_meetingday'), ('food_orders', '0003_remove_product_category_delete_category'), ('food_orders', '0004_product_caterogy'), ('food_orders', '0005_rename_caterogy_product_category'), ('food_orders', '0006_orderpacker_combinedorder_delete_orderpacked'), ('food_orders', '0007_remove_order_products_alter_orderitem_product_and_more'), ('food_orders', '0008_accountbalance_voucher_participant'), ('food_orders', '0009_remove_order_total_amount_remove_orderitem_price_and_more'), ('food_orders', '0010_vouchersetting_and_more'), ('food_orders', '0011_alter_order_status_alter_product_quantity_in_stock'), ('food_orders', '0012_voucher_voucher_type_alter_accountbalance_balance'), ('food_orders', '0013_remove_voucher_participant'), ('food_orders', '0014_remove_accountbalance_balance_and_more'), ('food_orders', '0015_classcalendar_remove_order_participant_order_account_and_more'), ('food_orders', '0016_rename_classcalendar_programpause'), ('food_orders', '0017_alter_order_account'), ('food_orders', '0018_alter_product_category'), ('food_orders', '0019_alter_accountbalance_participant'), ('food_orders', '0020_participant_program'), ('food_orders', '0021_voucher_notes'), ('food_orders', '0022_alter_voucher_notes'), ('food_orders', '0023_order_paid'), ('food_orders', '0024_alter_voucher_account'), ('food_orders', '0025_category_product_active_alter_product_category_and_more'), ('food_orders', '0026_productmanager_limit_scope_and_more'), ('food_orders', '0027_remove_order_status_order_status_type_and_more'), ('food_orders', '0028_alter_product_category'), ('food_orders', '0029_alter_product_category'), ('food_orders', '0030_alter_product_category_alter_productmanager_category'), ('food_orders', '0031_product_is_hygiene'), ('food_orders', '0032_rename_order_combinedorder_orders_and_more'), ('food_orders', '0033_combinedorder_program_alter_combinedorder_packed_by'), ('food_orders', '0034_remove_product_is_hygiene_product_create_user'), ('food_orders', '0035_remove_product_create_user_participant_create_user'), ('food_orders', '0036_participant_user'), ('food_orders', '0037_orderitem_price_at_order'), ('food_orders', '0038_alter_participant_program'), ('food_orders', '0039_remove_participant_address_and_more'), ('food_orders', '0040_alter_product_category'), ('food_orders', '0041_product_is_meat_product_weight_lbs_and_more'), ('food_orders', '0042_alter_productmanager_limit_scope'), ('food_orders', '0043_user'), ('food_orders', '0044_userprofile_delete_user'), ('food_orders', '0045_remove_participant_infant_participant_diaper_count'), ('food_orders', '0046_alter_orderitem_price_at_order'), ('food_orders', '0047_combinedorder_summarized_data_orderpacker_programs_and_more'), ('food_orders', '0048_emaillog'), ('food_orders', '0049_voucherlog'), ('food_orders', '0051_alter_vouchersetting_adult_amount_and_more'), ('food_orders', '0052_participant_active'), ('food_orders', '0053_alter_program_meetingday'), ('food_orders', '0054_combinedorder_is_parent_order_user_and_more'), ('food_orders', '0055_alter_order_status_type_alter_participant_allergy_and_more'), ('food_orders', '0056_accountbalance_base_balance'), ('food_orders', '0057_alter_accountbalance_base_balance'), ('food_orders', '0058_remove_programpause_created_at_and_more'), ('food_orders', '0059_voucher_multiplier_voucher_program_pause_flag'), ('food_orders', '0060_remove_programpause_is_active_gate_and_more'), ('food_orders', '0061_alter_programpause_pause_end_and_more'), ('food_orders', '0062_accountbalance_active_accountbalance_created_at_and_more'), ('food_orders', '0063_alter_category_options_and_more'), ('food_orders', '0064_ordervoucher'), ('food_orders', '0065_voucher_state'), ('food_orders', '0066_alter_voucher_multiplier_alter_voucher_state'), ('food_orders', '0067_order_order_number_order_success_viewed_and_more')]

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LifeSkillsCoach',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='coaches/')),
            ],
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=15)),
                ('address', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('assigned_coach', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customers', to='food_orders.lifeskillscoach')),
                ('adults', models.PositiveIntegerField(default=1)),
                ('children', models.PositiveIntegerField(default=0)),
                ('infant', models.BooleanField(default=False)),
                ('create_user', models.BooleanField(default=False, help_text='If checked this will create a user account.', null=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('meeting_time', models.TimeField()),
                ('meeting_address', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('MeetingDay', models.CharField(choices=[('monday', 'Monday'), ('tuesday', 'Tuesday'), ('wednesday', 'Wednesday'), ('thursday', 'Thursday'), ('friday', 'Friday')])),
            ],
        ),
        migrations.CreateModel(
            name='OrderPacker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('programs', models.ManyToManyField(blank=True, related_name='packers', to='food_orders.program')),
            ],
        ),
        migrations.CreateModel(
            name='AccountBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('participant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='food_orders.participant')),
                ('base_balance', models.DecimalField(decimal_places=1, default=0, max_digits=4, validators=[django.core.validators.MinValueValidator(0)])),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', django_ulid.models.ULIDField(primary_key=True, serialize=False)),
                ('order_date', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, default=datetime.datetime(2025, 6, 6, 16, 24, 29, 31980, tzinfo=datetime.timezone.utc))),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='food_orders.accountbalance')),
                ('paid', models.BooleanField(default=False)),
                ('status_type', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('packing', 'Packing'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', help_text='The current status of the order.', max_length=20)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('order_number', models.CharField(default=1, editable=False, max_length=20, unique=True)),
                ('success_viewed', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Subcategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='food_orders.category')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField()),
                ('quantity_in_stock', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='products/')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product', to='food_orders.category')),
                ('active', models.BooleanField(default=True)),
                ('subcategory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='food_orders.subcategory')),
                ('is_meat', models.BooleanField(default=False)),
                ('weight_lbs', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='food_orders.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='food_orders.product')),
                ('price', models.DecimalField(decimal_places=2, default=2, max_digits=8)),
                ('price_at_order', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='participant',
            name='program',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='food_orders.program'),
        ),
        migrations.RemoveField(
            model_name='participant',
            name='address',
        ),
        migrations.RemoveField(
            model_name='participant',
            name='phone_number',
        ),
        migrations.CreateModel(
            name='Voucher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vouchers', to='food_orders.accountbalance')),
                ('active', models.BooleanField(default=True)),
                ('voucher_type', models.CharField(choices=[('life', 'Life'), ('grocery', 'Grocery')], default='grocery', max_length=20)),
                ('notes', models.TextField(blank=True, default=' ')),
                ('multiplier', models.IntegerField(default=1, editable=False)),
                ('program_pause_flag', models.BooleanField(default=False)),
                ('state', models.CharField(choices=[('pending', 'Pending'), ('applied', 'Applied'), ('consumed', 'Consumed')], default='pending', editable=False, max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='ProductManager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('notes', models.TextField(blank=True, null=True)),
                ('limit', models.IntegerField(default=2, help_text='Maximum number of products allowed in this category per order.', validators=[django.core.validators.MinValueValidator(1)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.OneToOneField(help_text='If category is selected, limit will be enforced at the category level.', on_delete=django.db.models.deletion.CASCADE, related_name='product_manager', to='food_orders.category')),
                ('subcategory', models.ForeignKey(blank=True, help_text='If Sub-Category is selected limit will be applied at the subcategory level', null=True, on_delete=django.db.models.deletion.CASCADE, to='food_orders.subcategory')),
                ('limit_scope', models.CharField(blank=True, choices=[('per_adult', 'Per Adult'), ('per_child', 'Per Child'), ('per_infant', 'Per Infant'), ('per_household', 'Per Household'), ('per_order', 'Per Order')], default='per_household', help_text='Scope of the limit: Adult, Child, Infant or Household.', max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('must_change_password', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.RemoveField(
            model_name='participant',
            name='infant',
        ),
        migrations.AddField(
            model_name='participant',
            name='diaper_count',
            field=models.PositiveIntegerField(default=0, help_text='Count of Children in Diapers or Pull-Ups'),
        ),
        migrations.CreateModel(
            name='EmailLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_type', models.CharField(choices=[('onboarding', 'Onboarding'), ('password_reset', 'Password Reset')], max_length=50)),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('message_id', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(default='sent', max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'email_type')},
            },
        ),
        migrations.CreateModel(
            name='VoucherSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adult_amount', models.DecimalField(decimal_places=1, default=20, max_digits=3, validators=[django.core.validators.MinValueValidator(0)])),
                ('child_amount', models.DecimalField(decimal_places=1, default=12.5, max_digits=3, validators=[django.core.validators.MinValueValidator(0)])),
                ('infant_modifier', models.DecimalField(decimal_places=1, max_digits=3, validators=[django.core.validators.MinValueValidator(0)])),
                ('active', models.BooleanField(default=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Voucher Settings',
            },
        ),
        migrations.AddField(
            model_name='participant',
            name='active',
            field=models.BooleanField(default=True),
        ),
        migrations.CreateModel(
            name='CombinedOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('orders', models.ManyToManyField(blank=True, related_name='combined_orders', to='food_orders.order')),
                ('packed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='combined_orders', to='food_orders.orderpacker')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='combined_orders', to='food_orders.program')),
                ('summarized_data', models.JSONField(blank=True, default=dict)),
                ('is_parent', models.BooleanField(default=False)),
            ],
            options={
                'constraints': [models.UniqueConstraint(models.F('program'), django.db.models.functions.datetime.ExtractYear('created_at'), django.db.models.functions.datetime.ExtractWeek('created_at'), name='unique_program_per_week')],
            },
        ),
        migrations.AddField(
            model_name='participant',
            name='allergy',
            field=models.CharField(blank=True, default='None', max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='participant',
            name='create_user',
            field=models.BooleanField(default=False, help_text='If checked this will create a user account.'),
        ),
        migrations.AlterField(
            model_name='participant',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='ProgramPause',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(blank=True, max_length=255, null=True)),
                ('pause_end', models.DateTimeField()),
                ('pause_start', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrderValidationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('participant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='food_orders.participant')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='food_orders.product')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('log_type', models.CharField(choices=[('INFO', 'Info'), ('WARNING', 'Warning'), ('ERROR', 'Error')], default='INFO', max_length=10)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='food_orders.order')),
                ('validated_at', models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VoucherLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('log_type', models.CharField(choices=[('INFO', 'Info'), ('WARNING', 'Warning'), ('ERROR', 'Error')], default='INFO', max_length=10)),
                ('balance_before', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('balance_after', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='food_orders.order')),
                ('participant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='food_orders.participant')),
                ('voucher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='food_orders.voucher')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('validated_at', models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderVoucher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applied_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('applied_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applied_vouchers', to='food_orders.order')),
                ('voucher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='food_orders.voucher')),
            ],
        ),
    ]
